let express,dotenv,mongoose,connectDB,path,errorResponseHandler,invalidRouteHandler,cors,userRoutes;_a34‍.w("express",[["default",["express"],function(v){express=v}]]);_a34‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_a34‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_a34‍.w("./config/db",[["default",["connectDB"],function(v){connectDB=v}]]);_a34‍.w("path",[["default",["path"],function(v){path=v}]]);_a34‍.w("./middleware/errorHandler.js",[["errorResponseHandler",["errorResponseHandler"],function(v){errorResponseHandler=v}],["invalidRouteHandler",["invalidRouteHandler"],function(v){invalidRouteHandler=v}]]);_a34‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_a34‍.w("./routes/userRoutes.js",[["default",["userRoutes"],function(v){userRoutes=v}]]);



    


//Routes
    





dotenv.config();
connectDB();




const app = express();
app.use(cors({ origin: ['http://localhost:3000'],  credentials: true}))
app.use(express.json());



app.get("/",(req,res) => {
    res.send("Server is Running")
});
app.use('/api/users',userRoutes);
//static assets
app.use("/uploads",express.static(path.join(__dirname,"/uploads")));

app.use(invalidRouteHandler);
app.use(errorResponseHandler)

app.listen(process.env.PORT,() => {
    console.log(`Server is Running On Port ${process.env.PORT}`);

})
